const e=JSON.parse('{"key":"v-17d1b56a","path":"/code/2018-09-12-Remove-Duplicates-from-Sorted-Array-cn.html","title":"从排序数组中删除重复项","lang":"zh-CN","frontmatter":{"title":"从排序数组中删除重复项","description":"给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。","tag":["leetcode","array","Easy-Collection"],"date":"2018-09-12T00:00:00.000Z","article":false,"category":"algorithms","head":[["meta",{"property":"og:url","content":"https://yinheng.me/code/2018-09-12-Remove-Duplicates-from-Sorted-Array-cn.html"}],["meta",{"property":"og:site_name","content":"Best Intention"}],["meta",{"property":"og:title","content":"从排序数组中删除重复项"}],["meta",{"property":"og:description","content":"给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-26T06:20:32.000Z"}],["meta",{"property":"article:author","content":"Maple Yin"}],["meta",{"property":"article:tag","content":"leetcode"}],["meta",{"property":"article:tag","content":"array"}],["meta",{"property":"article:tag","content":"Easy-Collection"}],["meta",{"property":"article:published_time","content":"2018-09-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-26T06:20:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"从排序数组中删除重复项\\",\\"description\\":\\"给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。\\"}"]]},"headers":[],"git":{"createdTime":1687753495000,"updatedTime":1687760432000,"contributors":[{"name":"Yin Heng","email":"yinheng@kuaishou.com","commits":2}]},"readingTime":{"minutes":1.97,"words":591},"filePathRelative":"code/2018-09-12-Remove-Duplicates-from-Sorted-Array-cn.md","localizedDate":"2018年9月12日","excerpt":"<blockquote>\\n<p>给定一个排序数组，你需要在<strong>原地</strong>删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。</p>\\n<p>不要使用额外的数组空间，你必须在<strong>原地修改输入数组</strong>并在使用 O(1) 额外空间的条件下完成。</p>\\n<p><strong>示例 1:</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>给定数组 nums = [1,1,2], \\n\\n函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。 \\n\\n你不需要考虑数组中超出新长度后面的元素。\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><strong>示例 2:</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>给定 nums = [0,0,1,1,1,2,2,3,3,4],\\n\\n函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。\\n\\n你不需要考虑数组中超出新长度后面的元素。\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><strong>说明:</strong></p>\\n<p>为什么返回数值是整数，但输出的答案是数组呢?</p>\\n<p>请注意，输入数组是以**“引用”**方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。</p>\\n<p>你可以想象内部操作如下:</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>// nums 是以“引用”方式传递的。也就是说，不对实参做任何拷贝\\nint len = removeDuplicates(nums);\\n\\n// 在函数里修改输入数组对于调用者是可见的。\\n// 根据你的函数返回的长度, 它会打印出数组中该长度范围内的所有元素。\\nfor (int i = 0; i &lt; len; i++) {\\n    print(nums[i]);\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></blockquote>"}');export{e as data};
